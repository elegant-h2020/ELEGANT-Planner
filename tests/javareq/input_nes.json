{
    "operatorGraph": [
        {
            "operatorId": "4",
            "children": [
                "7",
                "10"
            ],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": ""
        },
        {
            "operatorId": "7",
            "children": [
                "6"
            ],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": ""
        },
        {
            "operatorId": "6",
            "children": [
                "5"
            ],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": "node_3"
        },
        {
            "operatorId": "5",
            "children": [],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": ""
        },
        {
            "operatorId": "10",
            "children": [
                "9"
            ],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": ""
        },
        {
            "operatorId": "9",
            "children": [
                "8"
            ],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": "node_3"
        },
        {
            "operatorId": "8",
            "children": [],
            "sourceCode": "",
            "inputData": "2048",
            "constraint": ""
        }
    ],
    "availNodes": [
        {
            "nodeId": "node_1",
            "devices": [
                {
                    "deviceId": "node_1-device_1",
                    "deviceType": "CPU",
                    "modelName": "intel_xeon_gold_5120",
                    "memory": "768"
                }
            ],
            "nodeType": "stationary"
        },
        {
            "nodeId": "node_2",
            "devices": [
                {
                    "deviceId": "node_2-device_1",
                    "deviceType": "CPU",
                    "modelName": "intel_xeon_gold_5120",
                    "memory": "768"
                }
            ],
            "nodeType": "stationary"
        },
        {
            "nodeId": "node_3",
            "devices": [
                {
                    "deviceId": "node_3-device_1",
                    "deviceType": "CPU",
                    "modelName": "intel_xeon_gold_5120",
                    "memory": "768"
                },
                {
                    "deviceId": "node_3-device_2",
                    "deviceType": "GPU",
                    "modelName": "amd_gold_5120",
                    "memory": "768"
                }
            ],
            "nodeType": "stationary"
        }
    ],
    "networkDelays": [
        {
            "linkID": "1-2",
            "transferRate": "1000"
        },
        {
            "linkID": "2-1",
            "transferRate": "500"
        },
        {
            "linkID": "1-3",
            "transferRate": "1000"
        },
        {
            "linkID": "3-1",
            "transferRate": "500"
        }
    ],
    "optimObjectives": "execution time"
}